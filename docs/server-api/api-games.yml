swagger: '2.0'
info:
  version: "0.1.0"
  title: "Games - JS Nat"
basePath: /
produces:
  - application/json
paths:
  '/games':
    get:
      summary: GET all Games
      tags:
        - Game
      produces:
        - application/json
      responses:
        200:
          description: A list of `Game` objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Game'
        401:
          description: Unauthorized
        404:
          description: Not Found
    post:
      summary: CREATE a new Game
      tags:
        - Game
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: gameRequest
          in: body
          description: The `Game` request.
          required: true
          schema:
            $ref: '#/definitions/GameRequest'
      responses:
        200:
          description: A list of `Game` objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Game'
        401:
          description: Unauthorized
        404:
          description: Not Found
  '/games/{gameId}':
    get:
      summary: GET a single Game
      tags:
        - Game
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: gameId
          in: path
          description: The id of the `Game`.
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: A `Game` object
          schema:
            $ref: '#/definitions/Game'
        401:
          description: Unauthorized
        404:
          description: Not Found
    put:
      summary: PUT update a Game
      tags:
        - Game
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: gameId
          in: path
          description: The id of the `Game`.
          required: true
          type: string
          format: uuid
        - name: gameRequest
          in: body
          description: The `Game` request.
          required: true
          schema:
            $ref: '#/definitions/GameRequest'
      responses:
        200:
          description: A `Game` object
          schema:
              $ref: '#/definitions/Game'
        401:
          description: Unauthorized
        404:
          description: Not Found
  '/games/{gameId}/vote':
    post:
      summary: POST a single vote to a Game
      tags:
        - Game
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: gameId
          in: path
          description: The id of the `Game`.
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: A `Game` object
          schema:
            $ref: '#/definitions/Game'
        401:
          description: Unauthorized
        404:
          description: Not Found
  '/games/{gameId}/owned':
    post:
      summary: POST a Game status to Owned
      tags:
        - Game
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: gameId
          in: path
          description: The id of the `Game`.
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: A `Game` object
          schema:
            $ref: '#/definitions/Game'
        401:
          description: Unauthorized
        404:
          description: Not Found
  '/games/clear':
    post:
      summary: POST Clear all Games
      tags:
        - Game
      parameters:
        - in: header
          name: X-Session-Token
          description: The ID of the session to check.
          required: true
          type: string
          format: UUID
      responses:
        200:
          description: Successful
        401:
          description: Unauthorized
        404:
          description: Not Found
definitions:
  Game:
    properties:
      id:
        description: Unique id of a `Game`
        type: string
        format: UUID
        x-chance-type: guid
      title:
        description: title of a `Game`
        type: string
        x-chance-type: word
      votes:
        description: page count of `Game`
        type: integer
        format: int64
        x-type-options:
          min: 0
          max: 300
      status:
        description: ownership status of a `Game`
        type: string
  GameRequest:
    properties:
      title:
        description: title of a `Game`
        type: string
        x-chance-type: word
